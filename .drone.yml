kind: pipeline
name: build monitoring

globals:
  - &tf_vars
    VERSION: 1.0.1
    
steps:
  
  - name: build image
    image: mcr.microsoft.com/azure-cli
    environment: 
     ARM_CLIENT_ID:
      from_secret: ARM_CLIENT_ID
     ARM_CLIENT_SECRET:
      from_secret: ARM_CLIENT_SECRET
     AZ_ACR_NAME:
      from_secret: AZ_ACR_NAME
     AZ_TENANT_ID:
      from_secret: AZ_TENANT_ID
     AZ_SUBSCRIPTION_ID: 
      from_secret: AZ_SUBSCRIPTION_ID
     DOCKLE_USERNAME:
      from_secret: ARM_CLIENT_ID
     DOCKLE_PASSWORD:
      from_secret: ARM_CLIENT_SECRET
     RETRIES: 0
     MAX_RETRIES: 3
    commands:
      - DRONE_SEMVER_PATCH=$DRONE_BUILD_NUMBER
      - DRONE_SEMVER="drone$DRONE_SEMVER_PATCH"
      - echo $DRONE_SEMVER
     # - az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $AZ_TENANT_ID
     # - az acr build -t sample/codeql-runner:"1.0.$DRONE_BUILD_NUMBER" -t sample/codeql-runner:latest -r $AZ_ACR_NAME .
      # - docker build -t "sample/hello-world:$DRONE_SEMVER" .
    #  - wget https://github.com/goodwithtech/dockle/releases/download/v0.3.1/dockle_0.3.1_Linux-64bit.tar.gz
     # - tar zxvf dockle_0.3.1_Linux-64bit.tar.gz
     # - mv dockle /usr/local/bin
    #  - dockle --exit-code 1 "swacr.azurecr.io/sample/hello-world":"1.0.$DRONE_BUILD_NUMBER"
  - name: run codeql
    image: swacr.azurecr.io/sample/codeql-runner
    commands:
    - chmod +x codeql-runner-linux
    - codeql-runner-linux --help
    
image_pull_secrets:
- azurecrjson

   
   
      
